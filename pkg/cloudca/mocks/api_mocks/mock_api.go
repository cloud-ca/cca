// Automatically generated by MockGen. DO NOT EDIT!
// Source: api/api.go

package api_mocks

import (
	"github.com/cloud-ca/cca/pkg/cloudca/api"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ApiClient interface
type MockApiClient struct {
	ctrl     *gomock.Controller
	recorder *_MockApiClientRecorder
}

// Recorder for MockApiClient (not exported)
type _MockApiClientRecorder struct {
	mock *MockApiClient
}

func NewMockApiClient(ctrl *gomock.Controller) *MockApiClient {
	mock := &MockApiClient{ctrl: ctrl}
	mock.recorder = &_MockApiClientRecorder{mock}
	return mock
}

func (_m *MockApiClient) EXPECT() *_MockApiClientRecorder {
	return _m.recorder
}

func (_m *MockApiClient) Do(request api.CcaRequest) (*api.CcaResponse, error) {
	ret := _m.ctrl.Call(_m, "Do", request)
	ret0, _ := ret[0].(*api.CcaResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockApiClientRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}

func (_m *MockApiClient) GetApiURL() string {
	ret := _m.ctrl.Call(_m, "GetApiURL")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockApiClientRecorder) GetApiURL() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetApiURL")
}

func (_m *MockApiClient) GetApiKey() string {
	ret := _m.ctrl.Call(_m, "GetApiKey")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockApiClientRecorder) GetApiKey() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetApiKey")
}
