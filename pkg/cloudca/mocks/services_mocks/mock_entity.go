// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./services/entity.go

package services_mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of EntityService interface
type MockEntityService struct {
	ctrl     *gomock.Controller
	recorder *_MockEntityServiceRecorder
}

// Recorder for MockEntityService (not exported)
type _MockEntityServiceRecorder struct {
	mock *MockEntityService
}

func NewMockEntityService(ctrl *gomock.Controller) *MockEntityService {
	mock := &MockEntityService{ctrl: ctrl}
	mock.recorder = &_MockEntityServiceRecorder{mock}
	return mock
}

func (_m *MockEntityService) EXPECT() *_MockEntityServiceRecorder {
	return _m.recorder
}

func (_m *MockEntityService) Get(id string, options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Get", id, options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}

func (_m *MockEntityService) List(options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "List", options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}

func (_m *MockEntityService) Execute(id string, operation string, body []byte, options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Execute", id, operation, body, options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) Execute(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Execute", arg0, arg1, arg2, arg3)
}

func (_m *MockEntityService) Create(body []byte, options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Create", body, options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0, arg1)
}

func (_m *MockEntityService) Update(id string, body []byte, options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Update", id, body, options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1, arg2)
}

func (_m *MockEntityService) Delete(id string, body []byte, options map[string]string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Delete", id, body, options)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEntityServiceRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0, arg1, arg2)
}
